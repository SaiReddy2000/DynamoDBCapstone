# CRUD Lambda function
import json
import os
import boto3

dynamodb = boto3.resource('dynamodb')
table_name = os.environ['DYNAMODB_TABLE_NAME']
table = dynamodb.Table(table_name)

def lambda_handler(event, context):
    http_method = event['httpMethod']
    if http_method == 'POST':
        return create_item(event)
    elif http_method == 'GET':
        return get_item(event)
    elif http_method == 'PUT':
        return update_item(event)
    elif http_method == 'DELETE':
        return delete_item(event)
    else:
        return {
            'statusCode': 400,
            'body': json.dumps('Invalid HTTP Method')
        }

def create_item(event):
    body = json.loads(event['body'])
    item = {
        'id': body['id'],
        'name': body['name']
    }
    table.put_item(Item=item)
    return {
        'statusCode': 200,
        'body': json.dumps('Item Created Successfully')
    }

def get_item(event):
    item_id = event['pathParameters']['id']
    response = table.get_item(Key={'id': item_id})
    item = response.get('Item')
    if not item:
        return {
            'statusCode': 404,
            'body': json.dumps('Item Not Found')
        }
    return {
        'statusCode': 200,
        'body': json.dumps(item)
    }

def update_item(event):
    body = json.loads(event['body'])
    item_id = event['pathParameters']['id']
    table.update_item(
        Key={'id': item_id},
        UpdateExpression='SET name = :val1',
        ExpressionAttributeValues={':val1': body['name']}
    )
    return {
        'statusCode': 200,
        'body': json.dumps('Item Updated Successfully')
    }

def delete_item(event):
    item_id = event['pathParameters']['id']
    table.delete_item(Key={'id': item_id})
    return {
        'statusCode': 200,
        'body': json.dumps('Item Deleted Successfully')
    }

